syntax = "proto3";

package o5.dante.v1;

import "buf/validate/validate.proto";
import "google/protobuf/any.proto";
import "j5/ext/v1/annotations.proto";
import "j5/list/v1/annotations.proto";
import "o5/messaging/v1/message.proto";
import "o5/messaging/v1/topic/dead.proto";
import "j5/state/v1/metadata.proto";

option go_package = "github.com/pentops/dante/gen/o5/dante/v1/dante_pb";

message DeadMessageKeys {
  option (j5.ext.v1.psm).entity_name = "deadmessage";
  string message_id = 1 [
    (j5.ext.v1.key).primary_key = true,
    (buf.validate.field).string.uuid = true
  ];
}

message DeadMessageState {
  j5.state.v1.StateMetadata metadata = 1 [(buf.validate.field).required = true];

  DeadMessageKeys keys = 2 [
    (buf.validate.field).required = true,
    (j5.ext.v1.field).message.flatten = true
  ];

  MessageStatus status = 3 [(j5.list.v1.field).enum.filtering = {
    filterable: true
    default_filters: ["MESSAGE_STATUS_CREATED"]
  }];

  DeadMessageData data = 4;
}

message DeadMessageData {
  o5.messaging.v1.topic.DeadMessage notification = 1;
  DeadMessageVersion current_version = 2;
}

message DeadMessageVersion {
  string version_id = 1 [(buf.validate.field).string.uuid = true];
  o5.messaging.v1.Message message = 2;
  SQSMessage sqs_message = 5;
  message SQSMessage {
    string queue_url = 1;
    map<string, string> attributes = 2;
  }
}

enum MessageStatus {
  MESSAGE_STATUS_UNSPECIFIED = 0;
  MESSAGE_STATUS_CREATED = 1;
  MESSAGE_STATUS_UPDATED = 2;
  MESSAGE_STATUS_REPLAYED = 3;
  MESSAGE_STATUS_REJECTED = 4;
}

enum Urgency {
  URGENCY_UNSPECIFIED = 0;
  URGENCY_LOW = 1;
  URGENCY_MEDIUM = 2;
  URGENCY_HIGH = 3;
}

message InvariantViolation {
  string description = 1 [(j5.list.v1.field).string.open_text.searching = {
    searchable: true
    field_identifier: "description"
  }];
  Any error = 2;
  Urgency urgency = 3 [(j5.list.v1.field).enum.filtering.filterable = true];
}

message UnhandledError {
  string error = 1 [(j5.list.v1.field).string.open_text.searching = {
    searchable: true
    field_identifier: "error"
  }];
}

// Any wraps the well-known any, but encodes messages as JSON in addition
message Any {
  google.protobuf.Any proto = 1;
  string json = 2;
}

message DeadMessageEvent {
  j5.state.v1.EventMetadata metadata = 1 [(buf.validate.field).required = true];

  DeadMessageKeys keys = 2 [(buf.validate.field).required = true];

  DeadMessageEventType event = 3 [(buf.validate.field).required = true];
}

message DeadMessageEventType {
  oneof type {
    option (j5.list.v1.oneof).filtering.filterable = true;

    Notified notified = 1;
    Updated updated = 2;
    Replayed replayed = 3;
    Rejected rejected = 4;
  }

  message Notified {
    o5.messaging.v1.topic.DeadMessage notification = 1;
  }

  message Updated {
    DeadMessageVersion spec = 1;
  }

  message Replayed {}

  message Rejected {
    string reason = 1;
  }
}
