// Code generated by protoc-gen-go-j5. DO NOT EDIT.

package dante_spb

import (
	j5reflect "github.com/pentops/j5/lib/j5reflect"
	j5schema "github.com/pentops/j5/lib/j5schema"
	proto "google.golang.org/protobuf/proto"
)

func (msg *UpdateDeadMessageRequest) Clone() any {
	return proto.Clone(msg).(*UpdateDeadMessageRequest)
}
func (msg *UpdateDeadMessageRequest) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *UpdateDeadMessageRequest) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *UpdateDeadMessageResponse) Clone() any {
	return proto.Clone(msg).(*UpdateDeadMessageResponse)
}
func (msg *UpdateDeadMessageResponse) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *UpdateDeadMessageResponse) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *ReplayDeadMessageRequest) Clone() any {
	return proto.Clone(msg).(*ReplayDeadMessageRequest)
}
func (msg *ReplayDeadMessageRequest) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *ReplayDeadMessageRequest) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *ReplayDeadMessageResponse) Clone() any {
	return proto.Clone(msg).(*ReplayDeadMessageResponse)
}
func (msg *ReplayDeadMessageResponse) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *ReplayDeadMessageResponse) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *RejectDeadMessageRequest) Clone() any {
	return proto.Clone(msg).(*RejectDeadMessageRequest)
}
func (msg *RejectDeadMessageRequest) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *RejectDeadMessageRequest) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *RejectDeadMessageResponse) Clone() any {
	return proto.Clone(msg).(*RejectDeadMessageResponse)
}
func (msg *RejectDeadMessageResponse) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *RejectDeadMessageResponse) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

// UpdateDeadMessage is a J5 method for service DeadMessageCommandService
func UpdateDeadMessageJ5MethodSchema() *j5schema.MethodSchema {
	return &j5schema.MethodSchema{
		Request:  j5schema.MustObjectSchema((&UpdateDeadMessageRequest{}).ProtoReflect().Descriptor()),
		Response: j5schema.MustObjectSchema((&UpdateDeadMessageResponse{}).ProtoReflect().Descriptor()),
	}
}

// ReplayDeadMessage is a J5 method for service DeadMessageCommandService
func ReplayDeadMessageJ5MethodSchema() *j5schema.MethodSchema {
	return &j5schema.MethodSchema{
		Request:  j5schema.MustObjectSchema((&ReplayDeadMessageRequest{}).ProtoReflect().Descriptor()),
		Response: j5schema.MustObjectSchema((&ReplayDeadMessageResponse{}).ProtoReflect().Descriptor()),
	}
}

// RejectDeadMessage is a J5 method for service DeadMessageCommandService
func RejectDeadMessageJ5MethodSchema() *j5schema.MethodSchema {
	return &j5schema.MethodSchema{
		Request:  j5schema.MustObjectSchema((&RejectDeadMessageRequest{}).ProtoReflect().Descriptor()),
		Response: j5schema.MustObjectSchema((&RejectDeadMessageResponse{}).ProtoReflect().Descriptor()),
	}
}
